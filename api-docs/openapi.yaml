openapi: 3.0.3
info:
  title: Budget API
  description: Budget API
  version: 0.0.1
  license:
    name: Unlicensed
    url: https://connorsmyth.com
servers:
  - url: https://budget.connorsmyth.com
paths:
  /api/user/{id}:
    description: Create, update, or retrieve a user
    summary: Creates, updates, or retrieves a single user
    get:
      operationId: getUserById
      summary: Get a user by its ID
      description: Get a single user
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/Identifier'
      responses:
        '200':
          description: Returns the requested user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    post:
      operationId: postUser
      summary: Create a user
      description: Create single user
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
              discriminator:
                propertyName: type
      responses:
        '200':
          description: Returns the created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      operationId: putUser
      summary: Update a user
      description: Update single user
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/Identifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
              discriminator:
                propertyName: type
      responses:
        '200':
          description: Returns the created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    delete:
      operationId: deleteUser
      summary: Delete a user
      description: Delete single user
      tags:
        - user
      parameters:
        - $ref: '#/components/parameters/Identifier'
      responses:
        '200':
          description: Confirms user with ID is deleted
          content:
            text/plain:
              schema:
                type: string
                example: User "12345" deleted
components:
  parameters:
    Identifier:
      in: path
      name: id
      required: false
      description: The ID of the resource
      schema:
        type: integer
        example: 12345
  schemas:
    Uuid:
      type: string
      example: b9f89472-85bc-4b3b-826a-18d2dd73549f
      pattern: '[a-f0-9]{8}-?[a-f0-9]{4}-?4[a-f0-9]{3}-?[89ab][a-f0-9]{3}-?[a-f0-9]{12}'
    User:
      type: object
      required:
        - uuid
        - email
        - isAdmin
        - locale
        - settings
        - active
      properties:
        id:
          type: integer
          example: 12345
        uuid:
          $ref: '#/components/schemas/Uuid'
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: Smith
        email:
          type: string
          example: john.smith@example.com
        isAdmin:
          type: boolean
          example: true
        address:
          type: string
          example: 1 Test St.
        city:
          type: string
          example: Toronto
        provinceState:
          type: string
          example: 'ON'
        country:
          type: string
          example: CA
        postalZip:
          type: string
          example: A1A 1A1
        locale:
          type: string
          example: en_CA
        phone:
          type: string
          example: +1 416-555-5555
        dob:
          type: string
          example: 1993-01-01T00:00:00Z
          description: RFC3339 date
        sex:
          type: string
          example: M
        settings:
          type: string
          example: '{}'
          description: JSON string of settings
        profileImage:
          type: string
          example: https://example.com/profile-image.jpg
        active:
          type: boolean
          example: true
